1. 实现思路概述
1.1）Web端标牌采用dom生成图片的核心技术。
1.2）为了解决打开方案或刷新界面时标牌初始化的过于耗时的问题，在保存标牌特效时将标牌对应的图片也同步存储在标牌中，下次标牌对象初始化时就可以直接使用存储的图片。
1.3）标牌对象的样式由服务中对应的html文件决定，用户可通过（3.用户自定义标牌样式）来创建自己的标牌样式。
2. 接口封装概述
2.1）用户通过指定“文本数组”和标牌样式的“html”的路径来创建标牌对象。
2.2）文本数组索引与标牌样式html中需要设置文本的标签对象的id一一对应，初始化标牌时会遍历文本数组，以索引为id找到对应的标签，并将文本内容设置到标签内。
3.用户自定义标牌样式：用户新建标牌样式时，必须满足标牌样式html创建规则，可参考示范样式文件sign1.html。规则如下：
	html的<body>节点下必须包含<div id="sign"></div>节点，底层是通过读取此节点下的所有dom, 进行dom中的文本更新后，将dom转为图片，显示成标牌。
		<div id="sign"></div>节点下的需要设置文本的标签，需要按照固定规则设置id。文本数组索引与标牌样式html中需要设置文本的标签对象的id一一对应。写法示例如下：
		例如：<div id="sign">
				<div id="0">标题</div>
				<p id="1">内容</p>
			  </div>
			 渲染时会根据标签的id，将标签“<div id="0">标题</div>”中的“标题”替换成文本数组中第1个文本信息，将标签“ <p id="1">内容</p>”中的“内容”替换成文本数组中
			 第2个文本信息。
		<div id="sign"></div>节点下的style中使用资源路径时， 将资源路径使用url()包含起来，注意[url(]中不能有空格。写法示例如下：
		例如：<div id="sign">
				<div id="0" style="background-image:url(./a.png)">标题</div>
			  </div>
		<div id="sign"></div>节点下其他地方使用使用资源路径时，注意[src="]或者[src=']中不能有空格。写法示例如下：
		例如：<div id="sign">
				<img src="./a.png">内容</div>
				<img src='./a.png'>内容</div>
			  </div>